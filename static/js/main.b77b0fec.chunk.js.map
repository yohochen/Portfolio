{"version":3,"sources":["nav-footer/Nav.js","about/About.js","HttpOption.js","project/ProjectItem.js","project/ApiHelper.js","project/BadCredError.js","project/Project.js","timeline/Timeline.js","contact/Contact.js","nav-footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","React","Component","About","id","http_option_with_header","headers","ProjectItem","props","state","error","isLoaded","languages","languagesPercentage","display","fetch","this","languagesURL","then","res","status","Error","json","result","setState","getLanguages","catch","err","languagesObj","total","Object","values","reduce","sum","lang","detail","entries","summary","toFixed","projectName","description","repo","onClick","window","open","Fragment","ApiHelper","url","hasParam","suffix","param","BadCredError","message","captureStackTrace","Project","projects","api_url","append","getFinalURL","preset","renderProjectItems","fetchWithoutPAT","filter","project","includes","name","map","key","html_url","descriptionMap","languages_url","Timeline","Contact","Footer","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.b77b0fec.chunk.js","sourcesContent":["import React from 'react';\nimport './Nav.css'\n\nexport class Nav extends React.Component {\n    render(){\n        return(\n              <nav>\n                <div className=\"row\">\n                  <ul className=\"main-nav\">\n                    <li><a href=\"#about\">About</a></li>\n                    <li><a href=\"#projects\">Projects</a></li>\n                    <li><a href=\"#timeline\">Timeline</a></li>\n                    <li><a href=\"#contact\">Contact</a></li>\n                  </ul>\n                </div>\n              </nav>\n        )\n    }\n}\n\nexport default Nav;\n","import React from 'react';\nimport './About.css'\n\nfunction About() {\n    return (\n        <section id=\"about\" className=\"section-about\">\n            <div className=\"about\">\n                <h1>I'm Yoho.\n                    <br />\n                    I'm a software engineer.\n                    <br />\n                    I'm passionate about Web and Cloud.\n                </h1>\n            </div>\n        </section>\n    )\n}\n\nexport default About;\n","const GITHUB_TOKEN = 'token ' + process.env.REACT_APP_GITHUB_ACESS_TOKEN\nconst header_github_personal_access_token = {\n    'Authorization': GITHUB_TOKEN\n}\n\nconst http_option_with_header = {\n    headers: header_github_personal_access_token,\n}\n\n\nexport default http_option_with_header\n","import React from 'react';\nimport './Project.css'\nimport http_option_with_header from '../HttpOption.js'\n\nexport class ProjectItem extends React.Component {\n\n    constructor(props) {\n          super(props);\n          this.state = {\n            error: null,\n            isLoaded: false,\n            languages: null,\n            languagesPercentage: '',\n            display: true\n          };\n        }\n\n    componentDidMount() {\n\n        fetch(this.props.languagesURL, http_option_with_header)\n          .then(res => {\n              if(res.status === 401){\n                throw new Error(\"Bad Credential when calling github api\")\n              }else{\n               return res.json()}\n           })\n          .then(\n            (result) => {\n              this.setState({\n                languages: result,\n                isLoaded: true\n              })\n            },\n\n            // Note: important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n\n            // this \"failure\" callback in the promise is an invisible try/catch that\n            // handle error, so that it does not get passed to catch\n\n            // (error) => {\n            //     console.log(\"calling error\")\n            //   this.setState({\n            //     isLoaded: true,\n            //     error\n            //   });\n            // }\n        )\n        .then(res => this.getLanguages(res))\n        .catch((err) => {\n            this.setState({\n              display: false\n            })\n        })\n    }\n\n    getLanguages(languagesObj) {\n        if(this.state.languages){\n\n            const reducerSum = (sum, lang) =>  sum + lang\n            const total = Object.values(this.state.languages).reduce(reducerSum, 0);\n\n            const reducerSummary = (summary, lang) => {\n                summary += '  ' + lang[0] + ': ' + (lang[1] / total * 100).toFixed(1) + '%'\n                return summary\n            }\n            const detail = Object.entries(this.state.languages).reduce(reducerSummary, '');\n            this.setState({languagesPercentage: detail})\n        }\n    }\n\n    render() {\n      const { projectName, description, repo } = this.props;\n      return (\n            <div className=\"project\" onClick={() => window.open(repo)}>\n                <h3>{projectName}</h3>\n                <div className=\"divider\"></div>\n                {this.state.display &&\n                    <React.Fragment>\n                        <p>\n                            {this.state.languagesPercentage}\n                        </p>\n                        <div className=\"divider\"></div>\n                    </React.Fragment>\n                }\n                <p>\n                    {description}\n                </p>\n\n            </div>\n          );\n        }\n      }\n\n  export default ProjectItem\n","class ApiHelper {\n    constructor(url){\n        this.url = url\n        this.hasParam = false;\n    }\n\n    append(suffix){\n        this.url += suffix\n        return this\n    }\n\n    param(param){\n        if(!this.hasParam){\n            this.hasParam = true;\n            this.url += '?' + param\n        }else{\n            this.url += '&' + param\n        }\n        return this\n    }\n\n    getFinalURL(){\n        return this.url\n    }\n}\n\nexport default ApiHelper\n","export class BadCredError extends Error {\n  constructor(message) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(message)\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, BadCredError)\n    }\n  }\n}\n\nexport default BadCredError\n","import React from 'react';\nimport ProjectItem from './ProjectItem';\nimport ApiHelper from './ApiHelper';\nimport './Project.css'\nimport BadCredError from './BadCredError.js'\nimport http_option_with_header from '../HttpOption.js'\n\nexport class Project extends React.Component {\n    constructor(props) {\n          super(props);\n          this.state = {\n            error: null,\n            isLoaded: false,\n            projects: []\n          };\n        }\n\n    componentDidMount() {\n        let api_url = new ApiHelper('https://api.github.com/users/yohochen').append('/repos').param('type=all').getFinalURL()\n        let preset = ['ParkingMaps', 'Skeye', 'Vision-Shopping', 'Foodpertino', 'Portfolio', 'Stock-platform']\n\n        fetch(api_url, http_option_with_header)\n          .then(res => {\n            if(res.status === 200){\n                return res.json()\n            }else{\n                throw new BadCredError('Failed to fetch Github API with given credential')\n            }\n          })\n          .then(\n            (result) => this.renderProjectItems(result, preset)\n          )\n          .catch((err) => {\n              if(err instanceof BadCredError){\n                  // fallback: re-call it without PAT\n                  this.fetchWithoutPAT(api_url, preset)\n              }\n          })\n      }\n\n    fetchWithoutPAT(api_url, preset) {\n      fetch(api_url)\n        .then((res) => {\n          if(res.status === 200){\n              return res.json()\n          }else{\n              throw new Error(\"Calling Github API with no Cred also failed\")\n          }\n        })\n        .then(\n          (result) => {\n            this.renderProjectItems(result, preset)}\n        )\n        .catch((err) => {\n            this.setState({\n              isLoaded: true,\n              error: 'Failed to fetch from Github API'\n            });\n        })\n    }\n\n    renderProjectItems(result, preset){\n      this.setState({\n        projects: result.filter(project => preset.includes(project.name)),\n        isLoaded: true\n      });\n    }\n\n    render(){\n        const {projects, isLoaded, error} = this.state\n\n        if (error){\n            return (\n                <section id=\"projects\" className=\"section-projects\">\n                    <div className=\"row projectTitle\">\n                      <h2>Projects</h2>\n                    </div>\n                    <div className=\"row\">\n                        <div className='error'> Error: {error} :(</div>\n                    </div>\n\n                </section>\n            )\n        } else if (!isLoaded) {\n          return <div></div>; // loading\n        } else {\n            return(\n                <section id=\"projects\" className=\"section-projects\">\n                    <div className=\"row projectTitle\">\n                      <h2>Projects</h2>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"projects-wrapper box\">\n                            {projects.map(\n                                project => {\n\n                                return (\n                                 <ProjectItem\n                                    key={project.name}\n                                    projectName={project.name}\n                                    repo={project.html_url}\n                                    description={project.description !== null ? project.description : descriptionMap[project.name]}\n                                    languagesURL={project.languages_url}/>\n                              )}\n                            )}\n                        </div>\n                    </div>\n\n                </section>\n            )\n        }\n    }\n}\n\nconst descriptionMap = {\n    'ParkingMaps': 'IOS project integrated with Firebase to display the nearby campus parking',\n    'Skeye': 'Event management app that provides convenience to event host, third party, and visitor',\n    'Vision-Shopping': 'E-commerce app to search similar commodity by photo. Uses IBM Wastson Visual recoginition',\n    'Foodpertino': 'Simple html5/css3 frontend project',\n    'Portfolio': 'Personal portfolio',\n    'Stock-platform': 'Informative Stock Platform built with React/Nodejs'}\n\nexport default Project;\n","import React from 'react';\nimport './Timeline.css'\n\nfunction Timeline() {\n    return (\n        <section id=\"timeline\" className=\"section-timeline\">\n            <div className=\"row timelineTitle\">\n              <h2>Timeline</h2>\n            </div>\n            <div id=\"cd-timeline\" className=\"cd-container\">\n\n        \t\t<div className=\"cd-timeline-block\">\n        \t\t\t<div className=\"cd-timeline-img cd-movie\">\n        \t\t\t</div>\n\n        \t\t\t<div className=\"cd-timeline-content\">\n        \t\t\t\t<h2>Software Engineer - AWS </h2>\n        \t\t\t\t<p>Worked to launch a PaaS product in Amazon Web Service using various native AWS technologies. Focused on microserice API design and implmentation, NoSQL database building, operational metrics monitoring and maintainance.</p>\n        \t\t\t\t<span className=\"cd-date\">2018-2019</span>\n        \t\t\t</div>\n        \t\t</div>\n\n        \t\t<div className=\"cd-timeline-block\">\n        \t\t\t<div className=\"cd-timeline-img cd-picture\">\n        \t\t\t</div>\n\n        \t\t\t<div className=\"cd-timeline-content\">\n        \t\t\t\t<h2>Software Engineering BS - SJSU </h2>\n        \t\t\t\t<p>Bachelor degree of Software Engineer @ San Jose State Univeristy</p>\n        \t\t\t\t<span className=\"cd-date\">2014-2017</span>\n        \t\t\t</div>\n        \t\t</div>\n    \t    </div>\n        </section>\n    )\n}\n\nexport default Timeline;\n","import React from 'react';\nimport './Contact.css'\n\nexport class Contact extends React.Component {\n    render(){\n        return(\n              <section id=\"contact\" className=\"section-contact\">\n                    <div className=\"row ContactTitle\">\n                        <h2>LOOKING FORWARD TO HEARING FROM YOU</h2>\n                    </div>\n                    <div className=\"ContactContent\">\n                        <p>CONTACT EMAIL: <br /> yohochen628@gmail.com</p>\n                    </div>\n\n              </section>\n        )\n    }\n}\n\nexport default Contact;\n","import React from 'react';\nimport './Footer.css'\n\nexport class Footer extends React.Component {\n    render(){\n        return(\n            <footer>\n              <div className=\"row\">\n                <div className=\"col span-1-of-2\">\n                {\n                  // <ul className=\"footer-nav\">\n                  //   <li><a href=\"#\">About</a></li>\n                  //   <li><a href=\"#\">Blog</a></li>\n                  // </ul>\n                }\n                </div>\n                <div className=\"col span-1-of-2\">\n                  <ul className=\"social-links\">\n                    <li><a href=\"https://www.linkedin.com/in/yiyang-chen-4540b5107/\"><i className=\"fab fa-linkedin\"></i></a></li>\n                    <li><a href=\"https://github.com/yohochen\"><i className=\"fab fa-github-square\"></i></a></li>\n\n                  </ul>\n                </div>\n              </div>\n\n              <div className=\"row\">\n                <p>\n                  Copyright &copy; 2020 Yohoc. All rights reserved.\n                </p>\n\n              </div>\n            </footer>\n        )\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Nav from './nav-footer/Nav';\nimport About from './about/About';\nimport Project from './project/Project';\nimport Timeline from './timeline/Timeline';\nimport Contact from './contact/Contact';\nimport Footer from './nav-footer/Footer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <header>\n            <Nav />\n            <About />\n        </header>\n        <Project />\n        <Timeline />\n        <Contact />\n        <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}